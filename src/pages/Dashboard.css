.wrapper {
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: minmax(45px, 8%) 1fr;
}

.header {
  grid-column: span 8;
  background-color: rgb(177, 168, 168);
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  z-index: 999;
}

.header__user {
  position: relative;
  background-color: gray;
}

.header__user__profile {
  padding-right: 0.5rem;

  display: flex;
  flex-direction: row;
  align-items: center;
  column-gap: 0.3rem;
  height: 100%;
}

.header__user__menu {
  overflow: hidden;
  width: 100%;
  top: 100%;
  background-color: red;
  z-index: 100;
}

.header__user__menu > p:hover {
  cursor: pointer;
}

.wrapper__content__container {
  grid-column: span 8;
  display: flex;
  flex-direction: row;
}

.content__bar {
  padding-left: 0.5rem;
  width: 17%;
  max-width: 211px;
  background-color: rgb(88, 88, 134);
}

.content__bar__cat {
  display: block;
  text-decoration: none;
  color: white;
  padding: 1rem 0;
}

.content__container {
  padding-left: 1.5rem;
  width: 100%;
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  grid-template-rows: 7.5% 7.5% 8% repeat(auto-fit, 5.6%);
  justify-content: center;
  column-gap: 0.5rem;
  row-gap: 0.5rem;
  position: relative;
  padding-bottom: 4rem;
}

.content__container__category {
  grid-column: span 7;
  display: flex;
  justify-content: center;
}

.content__container__buttons {
  grid-column: -1/-2;
  display: grid;
  place-content: center;
}

.content__container__button--danger {
  background-color: red;
  padding: 0.7rem 1.2rem;
  color: white;
  border-radius: 5px;
}

.content__container__header {
  padding-left: 3%;
  padding-bottom: 1rem;
  grid-column: span 7;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  column-gap: 0.4rem;
  height: 100%;
}

.content__container__header > div {
  width: 100%;
  display: grid;
  place-items: center;
  background-color: rgb(214, 213, 213);
  height: 100%;
}

.content__container__header > div > h2 {
  margin-block-start: 0;
  margin-block-end: 0;
}

.content__container__pagination {
  display: flex;
  justify-content: flex-end;
  grid-column: span 7;
}

.content__card__container {
  grid-column: span 7;
}

.card__container__card {
  display: grid;
  grid-template-columns: 3% repeat(6, 1fr);
}

.card__container__card > div {
  display: flex;
  align-items: center;
  justify-content: center;
  padding-left: 0.5rem;
  height: 2rem;
}

.paginationBttns {
  height: 10px;
  list-style: none;
  display: flex;
  justify-content: center;
}

.paginationBttns a {
  padding: 7px;
  margin: 6px;
  border-radius: 5px;
  border: 1px solid #2b2eff;
  color: #2b2eff;
  cursor: pointer;
}

.paginationBttns a:hover {
  color: white;
  background-color: #2b2eff;
}

.paginationActive a {
  color: white;
  background-color: #2b2eff;
}

.paginationDisabled a {
  color: grey;
  background-color: grey;
}

.button {
  display: flex;
  width: 10%;
  margin: 1rem;
  align-self: center;
  padding-left: 1rem;
  padding-top: 0.5rem;
  margin-top: 1%;
  font-size: 1.5rem;
  overflow-y: hidden;
  border: 1px solid rgb(247, 224, 224);
  height: 5vh;
  font-weight: bold;
  font-family: Georgia, "Times New Roman", Times, serif;
  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1),
    0 0 0 0.1px rgb(255, 255, 255), 0.3em 0.3em 1em rgba(0, 0, 0, 0.3);
}
button:hover {
  transform: scale(1.2);
  transition: 1s;
}

.list-transition-enter {
  /*We give the list the initial dimension of the list button*/
  top: 0;
  width: 100%;
  color: transparent;
  position: absolute;
  z-index: -1;
}
/* This is where we can add the transition*/
.list-transition-enter-active {
  top: 100%;
  width: 100%;
  transition: all 400ms;
  z-index: -1;
}
/* This fires as soon as the this.state.showList is false */
.list-transition-exit {
  top: 100%;
  width: 100%;
  position: absolute;
  z-index: -1;
}
/* fires as element leaves the DOM*/
.list-transition-exit-active {
  top: 0;
  width: 100%;
  transition: all 400ms;
  z-index: -1;
}

/**/

.side-bar-transition-enter {
  /*We give the list the initial dimension of the list button*/
  left: -150%;
  position: relative;
  color: transparent;
}
/* This is where we can add the transition*/
.side-bar-transition-enter-active {
  left: 0;
  position: relative;
  transition: all 400ms;
}
/* This fires as soon as the this.state.showList is false */
.side-bar-transition-exit {
  left: 0;
  position: relative;
}
/* fires as element leaves the DOM*/
.side-bar-transition-exit-active {
  left: -150%;
  position: relative;
  transition: all 400ms;
}

@media (min-width: 1000px) {
  .header {
    justify-content: flex-end;
  }
}
